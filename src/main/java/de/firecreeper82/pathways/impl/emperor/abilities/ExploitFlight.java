package de.firecreeper82.pathways.impl.emperor.abilities;

import de.firecreeper82.lotm.Plugin;
import de.firecreeper82.pathways.Ability;
import de.firecreeper82.pathways.Items;
import de.firecreeper82.pathways.Pathway;
import de.firecreeper82.pathways.impl.emperor.EmperorItems;
import org.bukkit.Material;
import org.bukkit.attribute.Attribute;
import org.bukkit.inventory.ItemStack;
import org.bukkit.scheduler.BukkitRunnable;

public class ExploitFlight extends Ability {
    private int flightSpeed;

    public ExploitFlight(int identifier, Pathway pathway, int sequence, Items items) {
        super(identifier, pathway, sequence, items);
        items.addToSequenceItems(identifier - 1, sequence);
    }

    @Override
    public void leftClick() {
        if (p.isSneaking()) {
            if (flightSpeed != 1) {
                flightSpeed--;
            } else {
                flightSpeed = 5;
            }
        } else {
            if (flightSpeed != 5) {
                flightSpeed++;
            } else {
                flightSpeed = 1;
            }
        }
    }

    @Override
    public void useAbility() {

        p.getAttribute(Attribute.GENERIC_FLYING_SPEED).setBaseValue(flightSpeed);
        new BukkitRunnable() {
            int timer = 120;

            @Override
            public void run() {

                p.setAllowFlight(true);

                if (pathway.getBeyonder().damageMagnified) {
                    cancel();
                }
                if (pathway.getBeyonder().getSpirituality() > 800) {
                    p.setAllowFlight(true);
                    pathway.getBeyonder().setSpirituality(pathway.getBeyonder().getSpirituality() - 800);
                } else {
                    p.setAllowFlight(false);
                    cancel();
                }
                pathway.getBeyonder().damageMagnified = true;
                if (!(pathway.getBeyonder().getSpirituality() > 800)) {
                    cancel();

                }
                timer--;
                if (timer == 0 || !(pathway.getBeyonder().getSpirituality() > 800)) {
                    cancel();
                    p.setAllowFlight(false);
                }
            }
        }.runTaskTimer(Plugin.instance, 0, 20);
    }

    @Override
    public ItemStack getItem() {
        return EmperorItems.createItem(Material.COMPARATOR, "Exploit Flight", "200/s", identifier, sequence, pathway.getBeyonder().getPlayer().getName());
    }
}
